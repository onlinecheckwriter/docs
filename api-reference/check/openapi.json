{
  "openapi": "3.0.1",
  "info": {
    "title": "Online Check Writer API",
    "description": "API documentation for creating checks.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://test.onlinecheckwriter.com/api/v3",
      "description": "Test server"
    },
    {
      "url": "https://app.onlinecheckwriter.com/api/v3",
      "description": "Production server"
    }
  ],
  "paths": {
    "/checks": {
      "get": {
        "summary": "Retrieve all checks",
        "description": "List all check records with optional filters like status, term, and reference ID.",
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of records to retrieve in the response. Defaults to 10.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "For navigating through pages. Defaults to the first page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "term",
            "in": "query",
            "description": "Filter records using any keywords.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter records by check status. Allowed values: `new`, `void`, `mailed`, `refunded`, `emailed`, `eprinted`, `printed`.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "Filter records by a unique reference ID.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of checks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": { "type": "integer" },
                            "currentPage": { "type": "integer" },
                            "perPage": { "type": "integer" }
                          }
                        },
                        "checks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "checkId": { "type": "string" },
                              "serialNumber": { "type": "string" },
                              "amount": { "type": "number" },
                              "amountInWord": { "type": "string" },
                              "date": { "type": "string", "format": "date" },
                              "status": { "type": "integer" },
                              "memo": { "type": "string", "nullable": true },
                              "accountNumber": { "type": "string", "nullable": true },
                              "invoiceNumber": { "type": "string", "nullable": true },
                              "referenceId": { "type": "string", "nullable": true },
                              "bankAccount": {
                                "type": "object",
                                "properties": {
                                  "bankAccountId": { "type": "string" },
                                  "name": { "type": "string" }
                                }
                              },
                              "payee": {
                                "type": "object",
                                "properties": {
                                  "payeeId": { "type": "string" },
                                  "name": { "type": "string" }
                                }
                              },
                              "checkStatus": {
                                "type": "object",
                                "properties": {
                                  "status": { "type": "integer" },
                                  "description": { "type": "string" }
                                }
                              },
                              "checkStatements": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "status": { "type": "string" },
                                    "date": { "type": "string", "format": "date" },
                                    "time": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "exampleResponse": {
                    "value": {
                      "success": true,
                      "data": {
                        "meta": {
                          "total": 21325,
                          "currentPage": 1,
                          "perPage": 10
                        },
                        "checks": [
                          {
                            "checkId": "kWx8eP3l60GK2Xz",
                            "serialNumber": "2",
                            "amount": 12.00,
                            "amountInWord": "twelve",
                            "date": "2024-11-18",
                            "status": 0,
                            "memo": null,
                            "accountNumber": null,
                            "invoiceNumber": null,
                            "referenceId": null,
                            "bankAccount": {
                              "bankAccountId": "6gYVewBOP7Gdx7b",
                              "name": "test"
                            },
                            "payee": {
                              "payeeId": "1ZoVelyDaQj8pwb",
                              "name": "test new"
                            },
                            "checkStatus": {
                              "status": 0,
                              "description": "New"
                            },
                            "checkStatements": [
                              {
                                "status": "created",
                                "date": "2024-11-18",
                                "time": "04:15 pm"
                              }
                            ]
                          },
                          {
                            "checkId": "zRNXG0J7PljLxyB",
                            "serialNumber": "345354353855",
                            "amount": 12.00,
                            "amountInWord": "twelve",
                            "date": "2024-11-16",
                            "status": 0,
                            "memo": null,
                            "accountNumber": null,
                            "invoiceNumber": null,
                            "referenceId": null,
                            "bankAccount": {
                              "bankAccountId": "xZqXGK2y0b4RzVv",
                              "name": "werwer"
                            },
                            "payee": {
                              "payeeId": "pzo54xE7BaGaXmL",
                              "name": "Test Name 2"
                            },
                            "checkStatus": {
                              "status": 0,
                              "description": "New"
                            },
                            "checkStatements": [
                              {
                                "status": "created",
                                "date": "2024-11-16",
                                "time": "11:19 am"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Unauthenticated." }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Checks"]
      },
      "post": {
        "summary": "Create Checks",
        "description": "Allows the creation of one or more checks in a single request. Advanced stubs can be included by passing a `voucher` object.",
        "requestBody": {
          "description": "Payload to create one or more checks.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bankAccountId": { "type": "string", "description": "Must be a valid bank account ID." },
                        "payeeId": { "type": "string", "description": "Must be a valid payee ID. Optional if `noPayee` is true." },
                        "categoryId": { "type": "string", "nullable": true, "description": "Category ID, if applicable." },
                        "serialNumber": { "type": "string", "description": "Custom serial number for the check." },
                        "issueDate": { "type": "string", "format": "date", "description": "Issue date of the check." },
                        "amount": { "type": "number", "description": "Amount of the check. Required unless `noAmount` is true." },
                        "memo": { "type": "string", "description": "Memo for the check." },
                        "note": { "type": "string", "description": "Internal note for the check." },
                        "accountNumber": { "type": "string", "description": "Account number associated with the check." },
                        "invoiceNumber": { "type": "string", "description": "Invoice number associated with the check." },
                        "noSign": { "type": "boolean", "description": "If true, creates the check without a signature. Defaults to false." },
                        "noAmount": { "type": "boolean", "description": "If true, creates the check without an amount. Defaults to false." },
                        "noDate": { "type": "boolean", "description": "If true, creates the check without a date. Defaults to false." },
                        "noPayee": { "type": "boolean", "description": "If true, creates the check without a payee. Defaults to false." },
                        "voucherId": { "type": "string", "nullable": true, "description": "Voucher ID, if applicable. Ignored if `voucher` is passed." },
                        "voucher": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "voucherNumber": { "type": "string", "description": "Voucher number." },
                            "memo": { "type": "string", "description": "Memo associated with the voucher." },
                            "date": { "type": "string", "format": "date", "description": "Voucher date." },
                            "voucherItems": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "invoiceNumber": { "type": "string", "description": "Invoice number associated with the voucher item." },
                                  "name": { "type": "string", "description": "Name of the voucher item." },
                                  "description": { "type": "string", "description": "Description of the voucher item." },
                                  "quantity": { "type": "number", "nullable": true, "description": "Quantity of the voucher item." },
                                  "unitCost": { "type": "number", "nullable": true, "description": "Unit cost of the voucher item." },
                                  "total": { "type": "number", "description": "Total amount for the voucher item." }
                                }
                              }
                            }
                          }
                        },
                        "customElements": {
                          "type": "object",
                          "additionalProperties": { "type": "string" },
                          "description": "Key-value pairs for custom elements."
                        }
                      },
                      "required": ["bankAccountId"]
                    }
                  }
                }
              },
              "examples": {
                "createMultipleChecks": {
                  "value": {
                    "checks": [
                      {
                        "bankAccountId": "{{bankAccountId}}",
                        "payeeId": "{{payeeId}}",
                        "categoryId": "",
                        "serialNumber": "1001",
                        "issueDate": "2020-10-25",
                        "amount": 100,
                        "memo": "First, Test check using API",
                        "note": "",
                        "accountNumber": "458756",
                        "invoiceNumber": "2545",
                        "noSign": false,
                        "noAmount": false,
                        "noDate": false,
                        "noPayee": false,
                        "voucherId": null,
                        "customElements": {
                          "element1": "first class tracking",
                          "element2": "test sender"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Check(s) created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Successfully created" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "checks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "checkId": { "type": "string" },
                              "serialNumber": { "type": "string" },
                              "amount": { "type": "string" },
                              "status": { "type": "number" },
                              "bankAccount": {
                                "type": "object",
                                "properties": {
                                  "bankAccountId": { "type": "string" },
                                  "name": { "type": "string" }
                                }
                              },
                              "payee": {
                                "type": "object",
                                "properties": {
                                  "payeeId": { "type": "string" },
                                  "name": { "type": "string" }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation failed or invalid data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "errorMsg": { "type": "string", "example": "Validation failed for check input." }
                  }
                },
                "examples": {
                  "missingBankAccount": {
                    "value": {
                      "success": false,
                      "errorMsg": "The bankAccountId field is required."
                    }
                  },
                  "invalidAmount": {
                    "value": {
                      "success": false,
                      "errorMsg": "The amount must be greater than 0."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Checks"]
      }
    },
    "/checks/{checkId}": {
      "get": {
        "summary": "Retrieve a check",
        "description": "Fetch the details of a single check using its unique ID.",
        "parameters": [
          {
            "name": "checkId",
            "in": "path",
            "description": "The unique ID of the check to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the details of the check.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "checkId": { "type": "string" },
                        "serialNumber": { "type": "string" },
                        "amount": { "type": "number" },
                        "amountInWord": { "type": "string" },
                        "date": { "type": "string", "format": "date" },
                        "status": { "type": "integer" },
                        "memo": { "type": "string", "nullable": true },
                        "accountNumber": { "type": "string", "nullable": true },
                        "invoiceNumber": { "type": "string", "nullable": true },
                        "referenceId": { "type": "string", "nullable": true },
                        "bankAccount": {
                          "type": "object",
                          "properties": {
                            "bankAccountId": { "type": "string" },
                            "name": { "type": "string" }
                          }
                        },
                        "payee": {
                          "type": "object",
                          "properties": {
                            "payeeId": { "type": "string" },
                            "name": { "type": "string" }
                          }
                        },
                        "checkStatus": {
                          "type": "object",
                          "properties": {
                            "status": { "type": "integer" },
                            "description": { "type": "string" }
                          }
                        },
                        "checkStatements": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": { "type": "string" },
                              "date": { "type": "string", "format": "date" },
                              "time": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "exampleResponse": {
                    "value": {
                      "success": true,
                      "data": {
                        "checkId": "kWx8eP3l60GK2Xz",
                        "serialNumber": "2",
                        "amount": 12.00,
                        "amountInWord": "twelve",
                        "date": "2024-11-18",
                        "status": 0,
                        "memo": null,
                        "accountNumber": null,
                        "invoiceNumber": null,
                        "referenceId": null,
                        "bankAccount": {
                          "bankAccountId": "6gYVewBOP7Gdx7b",
                          "name": "Demo Bank"
                        },
                        "payee": {
                          "payeeId": "1ZoVelyDaQj8pwb",
                          "name": "John Doe"
                        },
                        "checkStatus": {
                          "status": 0,
                          "description": "New"
                        },
                        "checkStatements": [
                          {
                            "status": "created",
                            "date": "2024-11-18",
                            "time": "04:15 pm"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Check not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "errorMsg": { "type": "string", "example": "This check not found" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Unauthenticated." }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Checks"]
      },
      "delete": {
        "summary": "Delete a check",
        "description": "Permanently deletes a check.",
        "tags": ["Checks"],
        "parameters": [
          {
            "name": "checkId",
            "in": "path",
            "required": true,
            "description": "The ID of the check to delete.",
            "schema": {
              "type": "string",
              "example": "RJ6qGAyPQzGE1rD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Check deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Permission denied.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "errorMsg": {
                      "type": "string",
                      "example": "You do not have permission to delete this cheque"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Check not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "errorMsg": {
                      "type": "string",
                      "example": "This check not found"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/checks/print": {
      "post": {
        "summary": "Print Checks",
        "description": "Allows printing checks by specifying the `checkId` and `paperType`. You can print multiple checks by passing an array of `checkId`s.",
        "parameters": [],
        "requestBody": {
          "description": "Payload to specify the check IDs and paper type for printing.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paperType": {
                    "type": "integer",
                    "description": "Paper type for the check. Available options:\n\n1 - Check on Top\n2 - Check on Middle\n3 - Check on Bottom\n4 - Three per page\n5 - Wallet size\n6 - Simple print.",
                    "enum": [1, 2, 3, 4, 5, 6],
                    "example": 1
                  },
                  "checkId": {
                    "type": "array",
                    "description": "Array of check IDs to print.",
                    "items": {
                      "type": "string",
                      "example": "123456"
                    }
                  }
                },
                "required": ["paperType", "checkId"]
              },
              "examples": {
                "singleCheck": {
                  "value": {
                    "paperType": 1,
                    "checkId": ["kWx8eP3l60GK2Xz"]
                  }
                },
                "multipleChecks": {
                  "value": {
                    "paperType": 4,
                    "checkId": ["kWx8eP3l60GK2Xz", "uIjkeP3l55GK8Jn"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checks printed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": { "type": "string", "example": "https://example.com/print/url" }
                      }
                    }
                  }
                },
                "examples": {
                  "exampleResponse": {
                    "value": {
                      "success": true,
                      "data": {
                        "url": "https://example.com/print/url"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Unauthenticated." }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation failed or invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "errorMsg": { "type": "string", "example": "Invalid paper type" }
                  }
                },
                "examples": {
                  "missingCheckId": {
                    "value": {
                      "success": false,
                      "errorMsg": "The checkId field is required."
                    }
                  },
                  "invalidPaperType": {
                    "value": {
                      "success": false,
                      "errorMsg": "Invalid paper type"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The check cannot be printed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "errorMsg": {
                      "type": "string",
                      "example": "Sorry, Check number 123456 is not allowed to print."
                    }
                  }
                },
                "examples": {
                  "forbiddenCheck": {
                    "value": {
                      "success": false,
                      "errorMsg": "Sorry, Check number 123456 is not allowed to print."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Checks"]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}