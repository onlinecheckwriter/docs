{
  "openapi": "3.0.1",
  "info": {
    "title": "Online Check Writer API",
    "description": "API documentation for retrieving all custom 'from' addresses.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://test.onlinecheckwriter.com/api/v3",
      "description": "Test server"
    },
    {
      "url": "https://app.onlinecheckwriter.com/api/v3",
      "description": "Production server"
    }
  ],
  "paths": {
    "/customFromAddresses": {
      "get": {
        "summary": "Retrieve All Custom From Addresses",
        "description": "Fetch a list of all custom 'from' address records.",
        "tags": ["Custom From Addresses"],
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "description": "Number of records to retrieve per page. Defaults to 10.",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 20
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination. Defaults to the first page.",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom 'from' addresses retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": { "type": "integer", "example": 45 }
                          }
                        },
                        "addresses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "example": "5EJy7VeBQGzn1m3" },
                              "name": { "type": "string", "example": "John" },
                              "companyName": { "type": "string", "nullable": true, "example": "Company A" },
                              "addressLine1": { "type": "string", "example": "Address 1" },
                              "addressLine2": { "type": "string", "nullable": true, "example": "Address 2" },
                              "city": { "type": "string", "example": "City" },
                              "state": { "type": "string", "example": "ST" },
                              "zip": { "type": "string", "example": "123465" },
                              "phone": { "type": "string", "nullable": true, "example": "" },
                              "email": { "type": "string", "nullable": true, "example": "example@test.com" },
                              "note": { "type": "string", "nullable": true, "example": "" }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "exampleResponse": {
                    "value": {
                      "success": true,
                      "data": {
                        "meta": {
                          "total": 2
                        },
                        "addresses": [
                          {
                            "id": "5EJy7VeBQGzn1m3",
                            "name": "John",
                            "companyName": "Company Name",
                            "addressLine1": "Address 1",
                            "addressLine2": "Address 2",
                            "city": "City",
                            "state": "ST",
                            "zip": "123456",
                            "phone": "",
                            "email": "example@example.com",
                            "note": ""
                          },
                          {
                            "id": "ZqRmA345OegdoLl",
                            "name": "John1",
                            "companyName": "Company Name 1",
                            "addressLine1": "Address 11",
                            "addressLine2": "Address 21",
                            "city": "City",
                            "state": "ST",
                            "zip": "123456",
                            "phone": "123456789",
                            "email": "",
                            "note": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Unauthenticated." }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Custom From Address",
        "description": "Create a custom 'from' address with required and optional parameters.",
        "tags": ["Custom From Addresses"],
        "requestBody": {
          "description": "Payload to create a custom 'from' address.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name associated with the address. Must be no longer than 50 characters.",
                    "example": "John Doe"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "The company name associated with the address. Optional and must be no longer than 50 characters.",
                    "example": "Company A"
                  },
                  "addressLine1": {
                    "type": "string",
                    "description": "The first line of the address. Must be no longer than 100 characters.",
                    "example": "Address 1"
                  },
                  "addressLine2": {
                    "type": "string",
                    "nullable": true,
                    "description": "The second line of the address. Optional and must be no longer than 100 characters.",
                    "example": "Address 2"
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the address. Must be no longer than 100 characters.",
                    "example": "City"
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of the address. Must be a 2-letter state short-name code.",
                    "example": "ST"
                  },
                  "zip": {
                    "type": "string",
                    "description": "The postal code of the address. Must be no longer than 15 characters.",
                    "example": "123456"
                  },
                  "phone": {
                    "type": "string",
                    "nullable": true,
                    "description": "The phone number associated with the address. Optional and must be no longer than 15 characters.",
                    "example": ""
                  },
                  "email": {
                    "type": "string",
                    "nullable": true,
                    "description": "The email address associated with the address. Optional and must be no longer than 100 characters.",
                    "example": "example@domain.com"
                  },
                  "note": {
                    "type": "string",
                    "nullable": true,
                    "description": "An internal note that identifies this address. Optional and must be no longer than 200 characters.",
                    "example": "This is the billing address for Company A."
                  }
                },
                "required": ["name", "addressLine1", "addressLine2", "city", "state", "zip"]
              },
              "example": {
                "name": "John Doe",
                "companyName": "Company A",
                "addressLine1": "Address 1",
                "addressLine2": "Address 2",
                "city": "City",
                "state": "ST",
                "zip": "123456",
                "phone": "",
                "email": "example@domain.com",
                "note": "This is the billing address for Company A."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Custom 'from' address created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "example": "5EJy7VeBQGzn1m3" },
                        "name": { "type": "string", "example": "John Doe" },
                        "companyName": { "type": "string", "example": "Company A" },
                        "addressLine1": { "type": "string", "example": "Address 1" },
                        "addressLine2": { "type": "string", "example": "Address 2" },
                        "city": { "type": "string", "example": "City" },
                        "state": { "type": "string", "example": "ST" },
                        "zip": { "type": "string", "example": "123456" },
                        "phone": { "type": "string", "example": "" },
                        "email": { "type": "string", "example": "example@domain.com" },
                        "note": { "type": "string", "example": "This is the billing address for Company A." }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation failed or duplicate address detected.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "errorMsg": { "type": "string", "example": "Validation failed for the address fields." },
                    "customFromAddressId": {
                      "type": "string",
                      "nullable": true,
                      "description": "The ID of the existing address if the input matches a duplicate.",
                      "example": "5EJy7VeBQGzn1m3"
                    }
                  }
                },
                "examples": {
                  "validationError": {
                    "value": {
                      "success": false,
                      "errorMsg": "The name field is required."
                    }
                  },
                  "duplicateAddressError": {
                    "value": {
                      "success": false,
                      "errorMsg": "This address already exists.",
                      "customFromAddressId": "5EJy7VeBQGzn1m3"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Unauthenticated." }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customFromAddresses/{customFromAddressId}": {
      "get": {
        "summary": "Retrieve a Single Custom From Address",
        "description": "Fetch details of a single custom 'from' address by its ID.",
        "tags": ["Custom From Addresses"],
        "parameters": [
          {
            "name": "customFromAddressId",
            "in": "path",
            "required": true,
            "description": "The ID of the custom 'from' address to retrieve.",
            "schema": {
              "type": "string",
              "example": "5EJy7VeBQGzn1m3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom 'from' address retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "example": "5EJy7VeBQGzn1m3" },
                        "name": { "type": "string", "example": "John" },
                        "companyName": { "type": "string", "nullable": true, "example": "Company A" },
                        "addressLine1": { "type": "string", "example": "Address 1" },
                        "addressLine2": { "type": "string", "nullable": true, "example": "Address 2" },
                        "city": { "type": "string", "example": "City" },
                        "state": { "type": "string", "example": "ST" },
                        "zip": { "type": "string", "example": "123456" },
                        "phone": { "type": "string", "nullable": true, "example": "" },
                        "email": { "type": "string", "nullable": true, "example": "example@test.com" },
                        "note": { "type": "string", "nullable": true, "example": "" }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "errorMsg": { "type": "string", "example": "Address not found" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Unauthenticated." }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}